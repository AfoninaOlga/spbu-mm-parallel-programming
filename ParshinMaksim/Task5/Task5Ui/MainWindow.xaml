<Window x:Class="Task5Ui.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Task5Ui"
        mc:Ignorable="d"
        Title="Supercool P2P chat" MinHeight="450" MinWidth="450" Height="450" Width="450">
    <Window.DataContext>
        <local:ViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <Style x:Key="Screen">
            <Style.Setters>
                <Setter Property="Border.Visibility" Value="Hidden" />
                <Setter Property="Border.Background" Value="#ffffff" />
            </Style.Setters>
        </Style>

        <Style x:Key="LoginPanel">
            <Style.Setters>
                <Setter Property="StackPanel.Orientation" Value="Vertical" />
                <Setter Property="StackPanel.VerticalAlignment" Value="Center" />
            </Style.Setters>
        </Style>

        <Style x:Key="TextBoxBase">
            <Style.Setters>
                <Setter Property="TextBox.Background" Value="#ffffff" />
                <Setter Property="TextBox.Foreground" Value="#333" />
                <Setter Property="TextBox.Margin" Value="5"/>
                <Setter Property="TextBox.Padding" Value="15 10"/>
                <Setter Property="TextBox.HorizontalAlignment" Value="Center" />
                <Setter Property="TextBox.Width" Value="250" />
            </Style.Setters>
        </Style>

        <Style x:Key="MessageBox" BasedOn="{StaticResource TextBoxBase}" >
            <Style.Setters>
                <Setter Property="TextBox.HorizontalAlignment" Value="Stretch" />
                <Setter Property="TextBox.Width" Value="Auto" />
                <Setter Property="TextBox.Height" Value="Auto" />
            </Style.Setters>
        </Style>

        <Style x:Key="TextBlockBase">
            <Style.Setters>
                <Setter Property="TextBlock.Padding" Value="5"/>
                <Setter Property="TextBlock.Margin" Value="5" />
                <Setter Property="TextBlock.Foreground" Value="#000000" />
                <Setter Property="TextBlock.FontSize" Value="14" />
            </Style.Setters>
        </Style>

        <Style x:Key="TitleBlock" BasedOn="{StaticResource TextBlockBase}">
            <Style.Setters>
                <Setter Property="TextBlock.HorizontalAlignment" Value="Center"/>
                <Setter Property="TextBlock.FontWeight" Value="Bold" />
                <Setter Property="TextBlock.FontSize" Value="18" />
            </Style.Setters>
        </Style>

        <Style x:Key="LoginItemBlock">
            <Style.Setters>
                <Setter Property="TextBlock.Padding" Value="0"/>
                <Setter Property="TextBlock.Margin" Value="0" />
                <Setter Property="TextBlock.Foreground" Value="#000000" />
                <Setter Property="TextBlock.FontSize" Value="14" />
                <Setter Property="TextBlock.HorizontalAlignment" Value="Center"/>
                <Setter Property="TextBlock.FontWeight" Value="Regular" />
            </Style.Setters>
        </Style>

        <Style x:Key="ButtonBase" >
            <Style.Setters>
                <Setter Property="Button.Background" Value="#ffffff" />
                <Setter Property="Button.Foreground" Value="#000000" />
                <Setter Property="Button.Margin" Value="5"/>
                <Setter Property="Button.Padding" Value="50 10"/>
                <Setter Property="Button.HorizontalAlignment" Value="Center" />
                <Setter Property="Button.FontSize" Value="14" />
            </Style.Setters>
        </Style>

        <Style x:Key="SendButton" BasedOn="{StaticResource ButtonBase}">
            <Style.Setters>
                <Setter Property="Button.Padding" Value="2"/>
                <Setter Property="Button.HorizontalAlignment" Value="Stretch" />
            </Style.Setters>
        </Style>

        <Style x:Key="MessageList">
            <Style.Setters>
                <Setter Property="ListBox.Background" Value="Transparent"/>
                <Setter Property="ListBox.BorderThickness" Value="0"/>
            </Style.Setters>
        </Style>

        <Style x:Key="HeaderBorder">
            <Style.Setters>
                <Setter Property="Border.Background" Value="#222" />
            </Style.Setters>
        </Style>

        <Style x:Key="MessageListItemContainer">
            <Style.Setters>
                <Setter Property="ListBoxItem.IsHitTestVisible" Value="False" />
            </Style.Setters>
        </Style>

        <Style x:Key="MessageBorder">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsMine}" Value="True">
                    <Setter Property="Border.HorizontalAlignment" Value="Right" />
                    <Setter Property="Border.Background" Value="#69db3b" />
                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsMine}" Value="False" />
                        <Condition Binding="{Binding Path=IsConnectedMessage}" Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Border.HorizontalAlignment" Value="Left" />
                    <Setter Property="Border.Background" Value="#5baede" />
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsMine}" Value="False" />
                        <Condition Binding="{Binding Path=IsConnectedMessage}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Border.HorizontalAlignment" Value="Left" />
                    <Setter Property="Border.Background" Value="#a1a1a1" />
                </MultiDataTrigger>
            </Style.Triggers>
            <Style.Setters>
                <Setter Property="Border.CornerRadius" Value="13" />
                <Setter Property="Border.MinWidth" Value="100" />
                <Setter Property="Border.MaxWidth" Value="300" />
                <Setter Property="Border.Padding" Value="2" />
            </Style.Setters>
        </Style>

        <Style x:Key="MessageSender" BasedOn="{StaticResource TextBlockBase}">
            <Style.Setters>
                <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                <Setter Property="TextBlock.Margin" Value="0" />
                <Setter Property="TextBlock.FontSize" Value="8" />
                <Setter Property="TextBlock.FontWeight" Value="SemiBold" />
            </Style.Setters>
        </Style>

        <Style x:Key="MessageText" BasedOn="{StaticResource TextBlockBase}">
            <Style.Setters>
                <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                <Setter Property="TextBlock.Margin" Value="0" />
            </Style.Setters>
        </Style>

        <Style x:Key="MessageDate" BasedOn="{StaticResource TextBlockBase}">
            <Style.Setters>
                <Setter Property="TextBlock.HorizontalAlignment" Value="Right" />
                <Setter Property="TextBlock.FontSize" Value="8" />
                <Setter Property="TextBlock.Margin" Value="0" />
            </Style.Setters>
        </Style>
    </Window.Resources>
    <Grid>
        <Border Style="{StaticResource Screen}" Name="LoginScreen" Visibility="Hidden">
            <StackPanel Style="{StaticResource LoginPanel}">
                <TextBlock Text="Supercool P2P chat 💬" Style="{StaticResource TitleBlock}" />
                <Separator Height="20" Background="Transparent"/>
                <TextBlock Text="User name" Style="{StaticResource LoginItemBlock}"/>
                <TextBox Text="{Binding MyUserName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxBase}" Name="UserNameBox" >
                    <TextBox.InputBindings>
                        <KeyBinding Key="Enter" Command="{Binding RunCommand}"/>
                        <KeyBinding Key="Return" Command="{Binding RunCommand}"/>
                    </TextBox.InputBindings>
                </TextBox>
                <TextBlock Text="Port to listen" Style="{StaticResource LoginItemBlock}" />
                <TextBox Text="{Binding MyPort, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxBase}" Name="PortBox" >
                    <TextBox.InputBindings>
                        <KeyBinding Key="Enter" Command="{Binding RunCommand}"/>
                        <KeyBinding Key="Return" Command="{Binding RunCommand}"/>
                    </TextBox.InputBindings>
                </TextBox>
                <TextBlock Text="Peer endpoint IP with port (leave empty to init new chatroom)" Style="{StaticResource LoginItemBlock}" />
                <TextBox Text="{Binding PeerEndPoint, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxBase}" Name="PeerEndPointBox" >
                    <TextBox.InputBindings>
                        <KeyBinding Key="Enter" Command="{Binding RunCommand}"/>
                        <KeyBinding Key="Return" Command="{Binding RunCommand}"/>
                    </TextBox.InputBindings>
                </TextBox>
                <Separator Height="20" Background="Transparent"/>
                <Button Content="Run" Style="{StaticResource ButtonBase}" Command="{Binding RunCommand}" IsDefault="True"/>
            </StackPanel>
        </Border>

        <Border Name="ChatScreen" Style="{StaticResource Screen}" Visibility="Visible">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="50"/>
                </Grid.RowDefinitions>

                <Border Grid.Row="0">
                    <ListBox ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" 
							 Name="MessageList" Focusable="False"
                             Style="{StaticResource MessageList}" ItemContainerStyle="{StaticResource MessageListItemContainer}"
							 HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"
                             ItemsSource="{Binding Messages}" VerticalAlignment="Bottom">
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel VerticalAlignment="Bottom"/>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>

                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <ListBoxItem Focusable="False">
                                    <Border Style="{StaticResource MessageBorder}">
                                        <StackPanel Orientation="Vertical">
                                            <TextBlock Text="{Binding Path=Sender}" Style="{StaticResource MessageSender}"/>
                                            <TextBlock Text="{Binding Path=Text}" Style="{StaticResource MessageText}"/>
                                            <TextBlock Text="{Binding Path=Date}" Style="{StaticResource MessageDate}"/>
                                        </StackPanel>
                                    </Border>
                                </ListBoxItem>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Border>

                <Border Grid.Row="1" Background="Transparent">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6*" />
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>
                        <TextBox Name="MessageBox" Style="{StaticResource MessageBox}" Text="{Binding CurrentMessage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="0" >
                            <TextBox.InputBindings>
                                <KeyBinding Key="Enter" Command="{Binding SendMessageCommand}"/>
                                <KeyBinding Key="Return" Command="{Binding SendMessageCommand}"/>
                            </TextBox.InputBindings>
                        </TextBox>
                        <Button Style="{StaticResource SendButton}" Command="{Binding SendMessageCommand}" Grid.Column="1" Name="SendButton" Content="➡️"/>
                    </Grid>
                </Border>
            </Grid>
        </Border>
    </Grid>
</Window>
